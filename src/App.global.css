/*
 * @NOTE: Prepend a `~` to css file paths that are in your node_modules
 *        See https://github.com/webpack-contrib/sass-loader#imports
 */

/* *Global Styles* */

* {
    box-sizing: border-box;
    margin: 0 auto;
}

body {
    font-family: Arial, Helvetica, sans-serif;
    overflow: hidden;
}

a {
    text-decoration: none;
}

a:hover {
    opacity: 1;
    text-decoration: none;
    cursor: pointer;
}

input {
    margin: 0 1em;
}

img {
    width: 100%;
}

label {
    display: block;
}

li {
    list-style: none;
}

table {
    display: block;
    border-collapse: collapse;
    width: 100%;
    height: 100%;
}

thead {
    margin-left: 0;
    /* border-bottom: 2px solid #aaaaaa; */
}

td,
th {
    padding: 10px;
    text-align: left;
}

td:last-child {
    border: none;
}

/* width */
::-webkit-scrollbar {
    width: 8px;
}

/* Track */
::-webkit-scrollbar-track {
    background: #ececec;
}

/* Handle */
::-webkit-scrollbar-thumb {
    background: #aaa;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
    background: #888;
}

input:focus,
select:focus,
textarea:focus,
button:focus {
    outline: none;
}

/* *Container Styles* */

#root {
    width: 100vw;
    height: 100vh;
}

.App {
    background-color: #fff;
    height: 100vh;
}

/* .MainTask {} */

.MainSession {
    display: grid;
    grid-template-columns: auto max-content;
    background-color: white;
    max-height: 100vh;
    min-width: 1270px;
    min-height: 520px;
    gap: 10px;
}

.Welcome {
    background-color: #159957;
    background-image: linear-gradient(120deg, #155799, #159957);
}

/* *SessionControls* */

.SessionControls {
    margin: 10px;
}

.SessionControls button {
    float: right;
    padding: 5px 10px;
    cursor: pointer;
    font-size: 1em;
    font-weight: bolder;
    border-radius: 5px;
    border: 2px solid #666;
    min-width: 80px;
    margin-top: 5px;
    color: #e54235;
}

.SessionControls button:hover {
    border: 2px solid #e54235;
}

/* *Config Styles* */

.ConfigWrapper {
    display: grid;
    grid-template-rows: min-content min-content min-content min-content;
    align-content: center;
    background-color: #fff;
    background-image: linear-gradient(120deg, #155799, #159957);
    color: white;
    width: 100vw;
    height: 100vh;
    margin: 0 auto;
    padding: 10px;
}

.Config {
    display: grid;
    grid-template-columns: auto;
    margin: 10px auto;
    width: 400px;
    align-items: center;
    padding: 20px;
    background-color: white;
    color: black;
    box-shadow: 0px 0px 10px 5px rgba(0, 0, 0, 0.25);
}

.input-label {
    margin: 0;
    font-size: 0.8em;
    padding-left: 10px;
}

.field {
    margin: 0;
    margin-bottom: 10px;
    border-bottom: 2px solid #666;
}

.field:hover {
    border-bottom: 2px solid #8ddfff;
}

.text-input input {
    padding: 5px 0;
    width: 98%;
}

.radio-input {
    padding: 5px;
}

.radio-input input {
    margin-left: 10px;
}

.value-input {
    padding: 5px;
}

.value-input input {
    width: min-content;
}

.path-input {
    display: grid;
    grid-template-columns: auto 1fr;
    border: none;
}

.path-input input {
    border-bottom: 2px solid #666;
}

.path-input input:hover {
    border-bottom: 2px solid #8ddfff;
}

.openButton {
    min-width: none !important;
    border: 2px solid #666;
    border-radius: 5px;
    padding: 4px;
}

.openButton:hover {
    border: 2px solid #8ddfff;
}

.path-input button img {
    width: 1.3em;
}

input {
    margin: 0 5px;
    font-size: 1em;
    border: none;
}

.path-input:hover {
    border: none;
}

.start-button {
    padding: 5px 10px;
    cursor: pointer;
    font-size: 1em;
    font-weight: bolder;
    border-radius: 5px;
    border: 2px solid #666;
    min-width: 80px;
    margin-top: 5px;
}

.start-button:hover {
    border: 2px solid #67af6e;
}

.config-err {
    color: #e54235;
    display: inline-block;
}

.config-bottom {
    display: grid;
    grid-template-columns: 1fr min-content;
    align-items: center;
    width: 100%;
}

/* *MatchingTask Styles* */

.MatchingTask {
    display: grid;
    grid-template-columns: 1fr 7fr;
    grid-template-rows: min-content min-content min-content;
    min-width: 800px;
    max-height: 100vh;
    margin: 10px;
}

.taskInstructions {
    margin: 10px auto;
    grid-column: 1 / span 2;
    font-size: 1.3em;
}

.taskFigureWrapper {
    margin-right: 10px;
}

.taskFigure {
    margin: 10px auto;
}

.figureLabel {
    margin-block-end: 0.5em;
    text-align: center;
    text-decoration: underline;
}

.figureImg {
    /* box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3); */
    border: 2px solid #cdcdcd;
    border-radius: 5%;
}

.TaskGrid {
    margin: 15px;
    display: grid;
    grid: repeat(4, 1fr) / repeat(7, 1fr);
    gap: 10px;
}

.TaskGrid button {
    background: none;
}

.taskGridWrapper {
    background-color: #d4d4d4;
    -moz-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.3);
    -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.3);
    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.3);
    transform: translate(0, 0); /* ? Forces overlay bounds to container. */
}

.taskInfo {
    grid-column: 1 / span 2;
    text-align: right;
    margin: 10px;
    min-height: 70px;
}

.score {
    margin: 10px;
    font-size: 1.3em;
}

.score li {
    display: inline-block;
    padding-right: 20px;
}

.MatchingTask-complete {
    font-size: 1.3em;
    margin: 10px auto;
}

.done-button {
    padding: 5px 10px;
    cursor: pointer;
    font-size: 1em;
    font-weight: bolder;
    border-radius: 5px;
    border: 2px solid #666;
    min-width: 80px;
    margin-top: 5px;
}

/* *GridTile Styles* */

.tile {
    border: none;
    padding: 0;
    align-items: inherit;
    display: inherit;
    appearance: none;
}

.tile img {
    border-radius: 5%;
    user-select: none;
}

.matchedTileImg {
    cursor: initial;
    border: 4px solid #61aa6b;
    opacity: 0.25;
}

.unmatchedTileImg {
    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);
    border: 2px solid #aaaaaa;
    cursor: pointer;
}

.unmatchedTileImg:hover {
    border: 4px solid #8ddfff;
}

/* *TaskOverlay Styles* */

.TaskOverlay {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    height: inherit;
    z-index: 1;
    user-select: none;
}

.overlayWrapper {
    display: grid;
    position: inherit;
    width: 100%;
    height: 100%;
    backdrop-filter: blur(4px);
}

.overlayBox {
    display: grid;
    grid-template-columns: 80px minmax(200px, 1fr);
    grid-template-rows: 100px;
    background-color: #67af6e;
    place-self: center;
    place-items: center;
    border-radius: 15px;
    color: white;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
    margin: 10px;
}

.overlaySymbol {
    font-size: 2em;
}

.overlayMessage {
    font-size: 1.5em;
    padding-right: 25px;
}

/* *Alarm Task* */

.AlarmTask {
    display: grid;
    grid-template-rows: auto min-content;
    overflow: hidden;
    max-height: 100vh;
    padding: 10px;
    gap: 20px;
}

/* *Alarm Table* */

.AlarmTable {
    display: grid;
    grid-template-rows: min-content auto;
    overflow-y: auto;
    height: 100%;
    background-color: white;
    border: 2px solid #ccc;
}

.AlarmHeader {
    width: 100%;
}

.AlarmHeaderCol {
    cursor: pointer;
    border-bottom: 2px solid #ececec;
    height: 42px;
}

.AlarmHeaderCol:hover {
    background-color: #d5f2ff;
}

.selectedHead {
    border-bottom: 2px inset #8ddfff;
}

.alarmTableBody {
    overflow-y: scroll;
    overflow-x: hidden;
    width: 100%;
    height: 100%;
    white-space: nowrap;
    border-collapse: collapse;
}

.alarmTableBody tr {
    cursor: pointer;
}

.alarmTableBody tr:nth-child(odd) {
    background-color: #ececec;
}

.alarmTableBody tr:hover {
    background-color: #d5f2ff;
}

.alarmTableBody td:last-child {
    font-weight: bold;
}

.selectedRow {
    background-color: #ccc !important;
    font-weight: bold;
}

/* *Alarm Details* */

.AlarmDetails {
    display: block;
    margin: 10px auto;
    padding: 10px;
    width: 100%;
    border: 2px solid #ccc;
    transform: translate(0, 0); /* ? Forces overlay bounds to container. */
}

.detailsBar {
    display: inline-block;
    width: 100%;
}

.detailsBar h2 {
    padding-top: 3px;
    float: left;
}

.btn {
    float: right;
    border: 1px solid #aaaaaa;
    border-radius: 3px;
    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);
    padding: 8px 16px;
    margin-right: 10px;
}

.btn:hover {
    border: 1px solid #8ddfff;
}

.escalateBtn {
    background-color: #a8e3ae;
}

.ignoreBtn {
    background-color: #e3a8a8;
}

.detailsTable {
    border-collapse: separate;
}

.detailsTable tr {
    border-bottom: 2px solid #aaa;
}

.detailsTable td {
    text-align: center;
}

/* *AlarmAction* */

.AlarmAction {
    float: right;
}

.actionLabel {
    font-weight: bold;
}

.actionSelect {
    margin-left: 10px;
    padding: 8px;
    font-weight: bold;
}

/* *AlarmAlert* */

.alertBox {
    min-height: 100px;
    margin: 0;
    justify-content: right;
}

.AlarmAlert {
    appearance: none;
    background-color: rgba(0, 0, 0, 0.8);
    border: none;
    border-radius: 15px;
    color: white;
    cursor: pointer;
    display: block;
    float: right;
    font: unset;
    margin: 0;
    padding: 0;
    width: fit-content;
    animation-duration: 10s;
    animation-name: slide-in;
    transform: translateX(150%);
}

.alertWrapper {
    display: grid;
    grid-template-columns: min-content auto;
    padding: 15px 30px 5px 30px;
    gap: 15px;
}

.timeBar {
    display: block;
    margin: 0;
    height: 8px;
    margin-top: 5px;
    background-color: rgba(255, 255, 255, 0.5);
    animation-duration: 11s;
    animation-name: timebar;
    width: 0%;
}

@keyframes slide-in {
    from {
        transform: translateX(150%);
    }
    10% {
        transform: translateX(0%);
    }
    90% {
        transform: translateX(0%);
    }
    100% {
        transform: translateX(150%);
    }
}

@keyframes stay-in {
    from {
        transform: translateX(0%);
    }
    to {
        transform: translateX(0%);
    }
}

@keyframes timebar {
    from {
        width: 100%;
    }
    to {
        width: 1%;
    }
}

.AlarmAlert img {
    width: 3em;
}

.AlarmAlert h3 {
    text-decoration: underline;
}

/* *Timer* */

.timerTime {
    font-size: 3em;
}
